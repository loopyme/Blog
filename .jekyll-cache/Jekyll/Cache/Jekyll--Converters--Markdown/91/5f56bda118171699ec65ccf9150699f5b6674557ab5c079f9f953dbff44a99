I"0<blockquote>
  <p>给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。</p>

  <p>示例:</p>

  <blockquote>
    <p>输入: “abcabcbb”</p>

    <p>输出: 3</p>

    <p>解释: 因为无重复字符的最长子串是 “abc”，所以其长度为 3。</p>
  </blockquote>
</blockquote>

<h3 id="1掐头法">1.掐头法&amp;</h3>

<p>第一反应是简单的掐头法(不知道叫啥),用list存substring,往list尾部放字符,有重复的就从头部把重复的去掉</p>

<p>stackoverflow上很多都推荐用enumerate替代for-in range写法,以后可以试试,用leetcode-cn平台测下来注释里那几种写法都差不多</p>

<p><strong>hist:</strong></p>
<ul>
  <li>最初写的时候没有最后的那个判断,导致全不重复时会出问题</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">lengthOfLongestSubstring</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">s</span><span class="p">:</span> <span class="s">'str'</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="s">'int'</span><span class="p">:</span>
        <span class="nb">list</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)):</span>
          <span class="c1"># for i,_ in enumerate(s):
</span>          <span class="c1"># for char in s:
</span>            <span class="k">if</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">:</span>
                <span class="nb">list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
            <span class="k">else</span> <span class="p">:</span>
                <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span><span class="o">&gt;</span><span class="n">result</span><span class="p">:</span>
                    <span class="n">result</span> <span class="o">=</span><span class="nb">len</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>
                <span class="c1"># result = max(len(list),result)
</span>                <span class="nb">list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
                <span class="nb">list</span> <span class="o">=</span> <span class="nb">list</span><span class="p">[</span><span class="nb">list</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">+</span><span class="mi">1</span><span class="p">:]</span>

        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">result</span><span class="p">:</span>
            <span class="n">result</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>
        <span class="c1"># result = max(len(list),result)
</span>        <span class="k">return</span>  <span class="n">result</span>
</code></pre></div></div>
<blockquote>
  <table>
    <tbody>
      <tr>
        <td>108ms 6.6MB</td>
        <td>76.79% 87%</td>
      </tr>
    </tbody>
  </table>
</blockquote>

<hr />
<h3 id="2-字典备忘录">2. 字典备忘录~</h3>

<p>还是来一波dict,python里用dict经常有惊喜,应该是HashTable的原因</p>

<p>感觉dict解题都是遍历,再把已遍历的放进dict里面,类似备忘录,方便查询.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">lengthOfLongestSubstring</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">s</span><span class="p">:</span> <span class="s">'str'</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="s">'int'</span><span class="p">:</span>
        <span class="n">last_seen</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="n">p</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">c</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
            <span class="k">if</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">last_seen</span> <span class="ow">and</span> <span class="n">last_seen</span><span class="p">[</span><span class="n">c</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="n">p</span><span class="p">:</span>
                <span class="n">p</span> <span class="o">=</span> <span class="n">last_seen</span><span class="p">[</span><span class="n">c</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">result</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="n">i</span><span class="o">-</span><span class="n">p</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">last_seen</span><span class="p">[</span><span class="n">c</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span>
        <span class="k">return</span> <span class="n">result</span>
</code></pre></div></div>
<blockquote>
  <table>
    <tbody>
      <tr>
        <td>84ms 6.6MB</td>
        <td>99.32% 99.65%</td>
      </tr>
    </tbody>
  </table>
</blockquote>

<hr />
<h3 id="3暴力">3.暴力</h3>
<p>官方题解里居然还有暴力法…O(n^3)的时间 太丑了就不写了</p>
:ET